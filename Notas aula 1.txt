Preparação do ambiente de front end:

Node.JS - Servidor

GIT - um software que mostra as ultimas alterações no seu código e permite voltar uma mudança já feita. Para windowa, usar o GIT Bash (é o TERMINAL do Windows que não é o CMD)

GIT HUB - Ao criar uma pasta, vc pode ativar a opção GIT Ignore (no final da pagina) que vai fazer com que ele não olhe para uma determinada ela.

_COMANDOS do GIT BASH_

COMO FAZER O GIT IGNORAR UMA PASTA:

Abrir o terminal. Acessar a raiz do repositorio onde esta a pasta a ser ignorada. No terminal, digitar vi .gitignore e, depois, :wq para sair e salvar. Ao dar um ls -la, o gitignore será mostrado.

PWD - Mostra o caminho que você está
LS - mostra quais pastas tem no diretório que vc está
LS -LA - Mostra arquivos visíveis e ocultos da pasta que vc se encontra. Ao encontrar um arquivo .git, mostra que tem um GIT assistindo essa pasta.
CTRL+L - Limpa a tela (WIN)
CTRL+C - para o processo
clear - Limpa a tela (MAC)
mkdir - comando para criar uma ou mais pastas ao mesmo tempo. Para criar várias pastas, separar com espaço.
cd nome da pasta - acessa a pasta criada
touch nome - cria arquivos dentro de uma pasta. Pode criar vários separando os nomes com espaço.
explorer . - abre a pasta atual (WIN)
open . - abre a pasta atual (MAC)

cd /*arrasta a pasta* - acessa a pasta arrastada
git clone + caminho do Git Hub - Clona o Repositorio selecionado
git status - mostra tudo o que foi alterado
git add . - adiciona tudo dentro da pasta no git, mas não sobe no GIT HUB
git commit -m "nome" - identifica as mudanças feitas
git push origin master - adiciona os arquivos EFETIVAMENTE no GIT. precisa informar login e senha


Visual Studio Code - alternativa ao Sublime. ALT + setas fazem mágica

CODESHARE - Exemplos de Código: https://codeshare.io/boot-sabado

GIT HUB - Branches
Os branches são diferentes áreas de um projeto. Normalmente se usa uma para testes e uma MASTER para arquivos que já estão estáveis e funcionando.